//
   Created by tanyuan on 1/18/16.
table.table.mm-box
    tr.th-inverse
        th 标题
        th 类型
        th 时间
        th 操作
    tbody
        each strategy in dataList
            tr
                td #{strategy.title}
                td #{strategy.channelPathName}
                td #{format(strategy.release_time)}
                td
                    span.icon-btn.edit(data-id='#{strategy.id}', title='编辑')
                        i.icon.icon-edit-3
                    span.icon-btn.trash(title='删除', data-id='#{strategy.id}', data-type='#{strategy.channel_path}')
                        i.icon.icon-trash
#delConfirm.modal(tabindex='-1', style='display: none;')
    .modal-body
        p 是否确认删除该投资策略？
    .modal-footer
        .text-center
            button.cancel.btn.btn-default(style='margin-right: 40px;', data-dismiss='modal') 取消
            button#strategyDelBtn.btn.btn-danger 确定


#modifyStrategy.modal(tabindex='-1', data-width='960', style='display: none;')
    form#formModifyStrategy(action='/crm/strategy/modify')
        .modal-header
            button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
            .row
                .col-md-3
                    h4.modal-title 编辑投资策略
        .modal-body
            .row
                .row.m-t-10
                    span.col-md-2.text-right.text-muted.small 标题
                    .col-md-6.text-left
                        input.holo(type='text', name='title', id='title', required='required')
                .row.m-t-10
                    span.col-md-2.text-right.text-muted.small 摘要
                    .col-md-6.text-left
                        input.holo(type='text', name='summary', id='summary', required='required')
                .row.m-t-25
                    span.col-md-2.text-right.text-muted.small 时间
                    .col-md-6.text-left
                        input(type='text', name='releaseTime', id='releaseTime', class='form-control', required='required')
                .row.m-t-30
                    .col-md-10.col-md-offset-1
                        script(id='editors', name='content', type='text/plain', style='height:240px;width:768px')
        .modal-footer
            .text-center
                button.cancel.btn.btn-lg.btn-default(style='margin-right: 40px;', type='button', data-dismiss='modal') 取消
                button#ok.btn.btn-lg.btn-success(type='submit') 确定
#strategyPageBar
script.
    $('[name=releaseTime]').datetimepicker({format: 'yyyy-mm-dd', autoclose: true, weekStart: 1, minView: 'month'});
    strategyPagination.bar('#strategyPageBar');
    var delId = '';
    var channelPath = '';
    $('#strategyDataList .trash').click(function() {
        delId = $(this).data('id');
        channelPath = $(this).attr('data-type');
        $('#delConfirm').modal('show');
    });
    $('#strategyDelBtn').click(function() {
        if(delId == '') {
           toastr.clear();
           toast({type : 'info', body : '删除错误!'})
           return false;
        }
        var data = {};
        data.channelPath = channelPath;
        var id = delId;
        var url = '/crm/strategy/delete';
        data.id = id;
        $.ajax({
          type: "DELETE",
          url: url,
          dataType: 'json',
          data: data,
          success: function(data) {
              $('#delConfirm').modal('hide');
              strategyPagination.reload();
          }
        });
    });
    $('#strategyDataList .edit').click(function() {
        var id = $(this).data('id');
        if(id == '') {
           toastr.clear();
           toast({type : 'info', body : '编辑错误!'})
           return false;
        }
        var url = '/crm/strategy/modifyData/'+id;
        um = UM.getEditor('editors');
        $.ajax({
           type: "GET",
           url: url,
           dataType: 'json',
           success: function(data) {
               var strategy = data.data;
               $('#formModifyStrategy #title').val(strategy.title);
               $('#formModifyStrategy #summary').val(strategy.summary);
               $('#formModifyStrategy #local').val(strategy.local);
               $('#formModifyStrategy #releaseTime').val(format(strategy.release_time));
               $('#formModifyStrategy').attr('data-id', strategy.id);
               if(strategy.content) {
                   um.setContent(strategy.content);
               }else {
                   um.setContent('');
               }
               $('#modifyStrategy').modal('show');
           }
        });
    });
    $('#formModifyStrategy').submit(function(ev) {
        ev.preventDefault();
        var url = $(this).attr('action');
        var serializeForm = $(this).serializeObject();
        var id = $(this).data('id');
        serializeForm.id = id;
        $(this).validate_popover({onsubmit: false, popoverPosition: 'top'});
        serializeForm.type = 'strategResearch';
        if($(this).validate().form()) {
           $.ajax({
              type: "PUT",
              url: url,
              dataType: 'json',
              data: serializeForm,
              success: function(data) {
                 if(data.msg.type == 'success') {
                    $('#modifyStrategy').modal('hide');
                    strategyPagination.reload();
                    um.destroy();
                 }
                 toast(data.msg)
              }
           });
        }
    });

    UM.plugins['image'] = function () {
        UM.commands['image'] = {
            execCommand: function (cmdName) {
               //在这里实现具体的命令的行为
               //当调用 editor.execCommand("save") 时， 该方法就会被调用
               //保存功能的实际代码由用户自己实现
               var dirName = $('#imageView').find('[name=dirName]').val();
               pup.template.renderTemplateByKey('news.imageView', {name: dirName, code: 'strategy'}, {
                   afterRender: function() {
                       $('#imageView').modal('show');
                   }
            });
        },
        queryCommandState: function (cmdName) {
            //这里返回只能是 1, 0, -1
            //1代表当前命令已经执行过了
            //0代表当前命令未执行
            //-1代表当前命令不可用
            //在这里总是返回0， 这样做可以使保存按钮一直可点击
            return 0;
        },
        //声明该插件不支持“撤销／保存”功能， 这样就不会触发ctrl+z 和ctrl+y的记忆功能
        notNeedUndo: 1
        };
    };
    UM.registerUI('image', function( name ){
       //该方法里的this指向编辑器实例
       var me = this,
       //实例化一个UMEDITOR提供的按钮对象
       $button = $.eduibutton({
           //按钮icon的名字， 在这里会生成一个“edui-icon-save”的className的icon box，
           //用户可以重写该className的background样式来更改icon的图标
           //覆盖示例见btn.css
           'icon': 'image',
           'title': me.options.lang === "zh-cn" ? "图片" : "image",
           'click': function(){
              //在这里处理按钮的点击事件
              //点击之后执行save命令
              me.execCommand( name );
           }
       });
       //在这里处理保存按钮的状态反射
       me.addListener( "selectionchange", function () {
          //检查当前的编辑器状态是否可以使用save命令
          var state = this.queryCommandState( name );
          //如果状态表示是不可用的( queryCommandState()的返回值为-1 )， 则要禁用该按钮
          $button.edui().disabled( state == -1 ).active( state == 1 );
       });
       //返回该按钮对象后， 该按钮将会被附加到工具栏上
       return $button;
    });
